"""add transactions with vpn servers

Revision ID: cc4fa7ce61a4
Revises: f524536eedbf
Create Date: 2024-12-04 12:16:56.281696

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cc4fa7ce61a4'
down_revision: Union[str, None] = 'f524536eedbf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('xtr', name='currencyenum').create(op.get_bind())
    sa.Enum('paid', 'refund', name='transactionstatusenum').create(op.get_bind())
    op.create_table('pushka_vpn_vpn_server',
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('members_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('create_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pushka_vpn_transaction',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('tariff_id', sa.Integer(), nullable=False),
    sa.Column('status', postgresql.ENUM('paid', 'refund', name='transactionstatusenum', create_type=False), nullable=False),
    sa.Column('total_amount', sa.Integer(), nullable=False),
    sa.Column('currency', postgresql.ENUM('xtr', name='currencyenum', create_type=False), nullable=False),
    sa.Column('payment_charge_id', sa.String(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('create_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['tariff_id'], ['pushka_vpn_tariff.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['pushka_vpn_user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pushka_vpn_user_link',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('link', sa.String(), nullable=False, comment='VPN link'),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('create_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['pushka_vpn_user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('link')
    )
    op.drop_table('pushka_vpn_user_tariff')
    op.add_column('pushka_vpn_tariff', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('pushka_vpn_user', sa.Column('subscription_expire_date', sa.DateTime(), nullable=True))
    op.drop_column('pushka_vpn_user', 'link')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('pushka_vpn_user', sa.Column('link', sa.VARCHAR(), autoincrement=False, nullable=True, comment='VPN link'))
    op.drop_column('pushka_vpn_user', 'subscription_expire_date')
    op.drop_column('pushka_vpn_tariff', 'is_active')
    op.create_table('pushka_vpn_user_tariff',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tariff_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('create_datetime', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='pushka_vpn_user_tariff_pkey')
    )
    op.drop_table('pushka_vpn_user_link')
    op.drop_table('pushka_vpn_transaction')
    op.drop_table('pushka_vpn_vpn_server')
    sa.Enum('paid', 'refund', name='transactionstatusenum').drop(op.get_bind())
    sa.Enum('xtr', name='currencyenum').drop(op.get_bind())
    # ### end Alembic commands ###
